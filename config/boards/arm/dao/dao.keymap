/*
 * Copyright (c) 2021 Rafael Yumagulov
 *
 * SPDX-License-Identifier: MIT
 * TODO: Клики мыши не сработали почему то - &mkp LCLK   &mkp RCLK  . Похоже просто надо include нужный добавить
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEF 0
#define LTL 1
#define LSL 2
#define LT1 3
#define LT2 4
#define RT1 5
#define LST 6
#define RTT 7

&lt { quick_tap_ms = <90>; };
&mt { quick_tap_ms = <90>; };

/ {
    chosen {
        zmk,matrix_transform = &default_transform;
        // zmk,matrix_transform = &extra_keys_transform;
    };
};

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        /** Добавил CTRL, SHFT, ALT на правую сторону - активно пользуюсь RSHFT  */
                        /** Эксперимент с &mt LALT TAB - пока очень нравится  */
                        /** TODO: попробовать все таки вернуть &lt LT1 ENTER но установить меньше задержку. 
                                Да и в целом надо попробовать меньше задержку установить для многих клавиш. Все таки использвать клавишу F было прям удобно 
                            UPD: отказаался от &lt RT1 ENTER - так как на правом thumb появилось много функциональности и начал путаться. 
                                 Поэтому сейчас вообще координально убрал &lt RT1 ENTER заменив на -> &lt RT1 AMPS for . in Russion. Ну и вернул &mo LT1 -> &lt LT1 ENTER
                                 Вообще подумал, что можно базовые стрелки вынести на слой, который буду нажимать левым мизинцем. Там есть Shift. Поэтому можно либо A, либо Ctrl
                        - &mt LSHFT CARET for , in Russian
                        - &lt RT1 AMPS for . in Russion
                        - experiment &lt { quick_tap_ms = <100>; } LSHFT CARET - не сработал похоже
                        */
                        bindings = <
        &mt LALT TAB       &kp Q        &kp W        &kp E        &kp R        &kp T                &kp Y   &kp U    &kp I        &kp O        &kp P           &kp LBKT
        &mo LSL            &kp A        &kp S        &kp D        &kp F        &kp G                &kp H   &kp J    &kp K        &kp L        &kp SEMI        &mt LSHFT SQT
        &mt LCTRL MINUS    &kp Z        &kp X        &kp C        &kp V        &kp B                &kp N   &kp M    &kp COMMA    &kp DOT      &kp FSLH        &kp BSLH
                                                  &lt LT2 ESC   &lt LT1 ENTER   &kp LGUI           &mt LSHFT SPC   &kp LSHFT   &lt RT1 BSPC
                        >;
                };
                left_thumb_layer {
                        /**
                        1
                        LTL
                        Для чего? Это для нажатия CMD+key
                        */
                        bindings = <
        &kp LG(TAB)       &kp LG(Q)   &kp LG(W)   &kp LG(E)   &kp LG(R)   &kp LG(T)          &kp LG(Y)   &kp LG(U)   &kp LG(I)       &kp LG(O)     &kp LG(P)      &kp LBKT
        &kp LSHFT         &kp LG(A)   &kp LG(S)   &kp LG(D)   &kp LG(F)   &kp LG(G)          &kp LG(H)   &kp LG(J)   &kp LG(K)       &kp LG(L)     &kp LG(SEMI)   &kp SQT
        &kp LCTRL         &kp LG(Z)   &kp LG(X)   &kp LG(C)   &kp LG(V)   &kp LG(B)          &kp LG(N)   &kp LG(M)   &kp LG(COMMA)   &kp LG(DOT)   &kp LG(FSLH)   &kp BSLH
                                                  &kp DEL     &kp LG(ENTER)   &none          &mt LSHFT LG(SPC)      &trans      &kp BSPC
                        >;
                };
                left_shift_layer {
                        /**
                        2
                        LSL
                        По сути один из главных слоев
                        */
                        bindings = <
        &kp LSHFT   &kp EXCL    &kp AT     &kp HASH    &kp DLLR        &kp PRCNT           &kp BSPC    &kp ENTER    &kp LBRC   &kp RBRC    &kp LS(GRAVE)       &kp GRAVE
        &none       &kp CARET   &kp AMPS   &kp LPAR    &kp RPAR        &kp ASTRK           &kp LEFT    &kp DOWN     &kp UP     &kp RIGHT   &mt LALT LS(SEMI)   &kp LS(SQT)
        &trans      &kp BSPC    &none      &none       &kp SPACE       &kp LS(SQT)         &kp COLON   &kp EQUAL    &kp LBKT   &kp RBKT    &mt LGUI LS(FSLH)   &kp LS(BSLH)
                                           &kp DEL     &kp LS(ENTER)   &mo LST             &mo RTT     &trans       &trans
                        >;
                };
                left_thumb_layer_1 {
                        /** 
                        3 LT1
                        Цифры, цифры
                         */
                        bindings = <
        &kp LALT     &none       &kp N7    &kp N8     &kp N9      &none             &kp EQUAL    &kp N7      &kp N8     &kp N9      &kp STAR     &kp SLASH
        &kp LSHFT    &none       &kp N4    &kp N5     &kp N6      &kp N0            &kp N0       &kp N4      &kp N5     &kp N6      &kp PLUS     &kp MINUS
        &kp LCTRL    &kp LGUI    &kp N1    &kp N2     &kp N3      &kp BSPC          &kp COLON    &kp N1      &kp N2     &kp N3      &kp COMMA      &kp DOT
                                             &kp DEL    &kp ENTER   &kp LGUI          &kp SPC       &kp LSHFT   &kp BSPC
                        >;
                };

                left_thumb_layer_2 {
                        /**
                        4 LT2
                        Управляющие кнопки и движение мышью
                        TODO: Сюда можно вынести Ctrl, Alt, Shift, Cmd на обе стороны
                        - &kp LGUI   &kp GRAVE - для переключения между окнами ОДНОЙ рукой.
                        */
                        bindings = <
        &trans      &none       &none        &none        &none       &none               &kp LS(Y)   &kp LS(U)    &kp LS(I)        &kp LS(O)        &kp LS(P)           &kp LS(LBKT)
        &trans      &none       &kp LEFT     &kp DOWN     &kp UP      &kp RIGHT           &kp LS(H)   &kp LS(J)    &kp LS(K)        &kp LS(L)        &kp LS(SEMI)        &kp LS(SQT)
        &trans      &kp LGUI    &kp GRAVE    &none        &none       &none               &kp LS(N)   &kp LS(M)    &kp LS(COMMA)    &kp LS(DOT)      &kp LS(FSLH)        &kp LS(BSLH)
                                             &kp ESC      &kp ENTER   &kp LGUI            &kp SPC    &kp LSHFT   &kp BSPC
                        >;
                };
                right_thumb_layer_1 {
                        /** 
                        5 RT1
                        Можно сюда управление мышью вынести. 
                        Тут важно иметь Ctrl, Alt, Shift, Cmd, чтобы нажимать их с F.. И в целом они есть, коме Cmd
                        */
                        bindings = <
        &trans       &kp F1     &kp F2    &kp F3   &kp F4   &kp F5                       &none      &kp C_BRI_DN   &kp C_BRI_UP   &kp C_VOL_DN   &kp C_VOL_UP   &kp C_MUTE
        &kp LSHFT    &kp F6     &kp F7    &kp F8   &kp F9   &kp F10                      &kp LEFT   &kp DOWN       &kp UP         &kp RIGHT      &kp LALT       &none
        &trans       &kp DEL    &kp BSPC  &kp SPC  &kp F11  &kp F12                      &kp ESC    &kp SPC        &kp ENTER      &none          &kp LGUI       &none
                                       &kp ESC   &kp ENTER     &kp LGUI            &kp SPACE    &kp LSHFT     &kp BSPC
                        >;
                };
                left_shift_thumb_layer {
                        /**
                        6
                        LST
                        Для чего? Это для нажатия CMD+SHIFT+key
                        */
                        bindings = <
        &kp LG(LS(TAB))   &kp LG(LS(Q))   &kp LG(LS(W))   &kp LG(LS(E))   &kp LG(LS(R))   &kp LG(LS(T))          &kp LG(LS(Y))   &kp LG(LS(U))   &kp LG(LS(I))       &kp LG(LS(O))     &kp LG(LS(P))      &kp LS(LBKT)
        &kp LSHFT         &kp LG(LS(A))   &kp LG(LS(S))   &kp LG(LS(D))   &kp LG(LS(F))   &kp LG(LS(G))          &kp LG(LS(H))   &kp LG(LS(J))   &kp LG(LS(K))       &kp LG(LS(L))     &kp LG(LS(SEMI))   &kp LS(SQT)
        &kp LCTRL         &kp LG(LS(Z))   &kp LG(LS(X))   &kp LG(LS(C))   &kp LG(LS(V))   &kp LG(LS(B))          &kp LG(LS(N))   &kp LG(LS(M))   &kp LG(LS(COMMA))   &kp LG(LS(DOT))   &kp LG(LS(FSLH))   &kp LS(BSLH)
                                                                        &kp DEL     &kp ENTER   &kp LGUI          &mo RTT      &trans      &trans
                        >;
                };
                right_thumb_thumb {
                        /**
                        7
                        RTT
                        */
                        bindings = <
        &kp LALT     &kp LS(Q)        &kp LS(W)        &kp LS(E)        &kp LS(R)        &kp LS(T)                &kp LS(Y)   &kp LS(U)    &kp LS(I)        &kp LS(O)        &kp LS(P)           &kp LS(LBKT)
        &kp LSHFT    &kp LS(A)        &kp LS(S)        &kp LS(D)        &kp LS(F)        &kp LS(G)                &kp LS(H)   &kp LS(J)    &kp LS(K)        &kp LS(L)        &kp LS(SEMI)        &kp LS(SQT)
        &kp LCTRL    &kp LS(Z)        &kp LS(X)        &kp LS(C)        &kp LS(V)        &kp LS(B)                &kp LS(N)   &kp LS(M)    &kp LS(COMMA)    &kp LS(DOT)      &kp LS(FSLH)        &kp LS(BSLH)
                                           &kp DEL     &kp ENTER   &kp LGUI            &mo RTT     &trans       &trans
                        >;
                };
        };
};
